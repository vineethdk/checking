# Uses python3
import sys

def get_optimal_value(capacity, weights, values):
    #value = 0.
    n=len(weights)
    res_weight=0
    res_value=0
    for i in range(n):
        maxi=0
        for j in range(n-i):
            if(maxi<(values[j]/weights[j])):
                maxi=values[j]/weights[j]
                value=values[j]
                weight=weights[j]
        values.remove(value)
        weights.remove(weight)
        if((capacity-res_weight)>=weight):
            res_value=res_value+value
            res_weight=res_weight+weight
        else:
            res_value=res_value+(value*(capacity-res_weight)/weight)
            return(res_value)
        #print(res_value,res_weight)
    return(res_value)


if __name__ == "__main__":
    data = list(map(int, sys.stdin.read().split()))
    n, capacity = data[0:2]
    values = data[2:(2 * n + 2):2]
    weights = data[3:(2 * n + 2):2]
    opt_value = get_optimal_value(capacity, weights, values)
    print("{:.10f}".format(opt_value))
